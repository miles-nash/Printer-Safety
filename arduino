/*
Printer Safety Gadget Arduino code
Updated code can be found on https://github.com/miles-nash/Printer-Safety/tree/master
A full tutorial and more information can be found on https://www.hackster.io/Milesnash_/3d-printer-fire-safety-448acf
The goal of this project was to create a device that allows 3d printer owners to  feel comftorable leaving their 3d printers running unsuppervised
It also decreases the likelyhood of an out of control electrical fire and can help to decrease damage.
 
 This work is licensed under the
 Creative Commons Attribution-NonCommercial-ShareAlike 3.0 Unported License.
 To view a copy of this license, visit http://creativecommons.org/licenses/by-nc-sa/3.0/
 or send a letter to Creative Commons, 444 Castro Street, Suite 900,
 Mountain View, California, 94041, USA.
*/
//pins
int ledSensePin = 11; //led turns on and off the sensor
int sensorPin = 5;
int alarmPin = 8;
int ledPin = 12;
int relay1 = 10;
int relay2 = 9;
//settings
int ensureDelay = 3; //time in seconds smoke must be detected for a hazard to be declared.
int hazardDelay = 10000000000; //The time in milliseconds until the alarm stops.
int triggerNumber = 500; //Sensor output required to set off alarm and kill power. Higher for higher threshold, lower for lower threshold.
//placeholders
int lastHazard;
int looped;
bool hazard = false;

void setup() {
  Serial.begin(9600);
  pinMode(ledSensePin,OUTPUT);
  pinMode(alarmPin,OUTPUT);
  pinMode(relay1,OUTPUT);
  pinMode(relay2,OUTPUT);
  digitalWrite(relay1,LOW); //the relay linked in the BOM is activated by LOW
  digitalWrite(relay2,LOW);//turn on printer
}

void loop() {

  if(voltage() >= triggerNumber ){//if the voltage coming from the sensor is too high, a hazard may be present
   //delay to ensure there is no false positive
   looped = 0;
   Serial.println("stage 1");
   while(voltage()>= triggerNumber){
    if(looped >= ensureDelay){
      Serial.print("hazard");
      hazard = true;
      break;
    }
    Serial.println("looped");
    Serial.println(looped);
    delay(1000);
    looped++;
   }
  }

  if(voltage() < triggerNumber - 50 && (millis() - lastHazard) > hazardDelay){//if the hazard stops and a time has passed, stop alarm
    hazard = false;
  }

  if(hazard == true){
    digitalWrite(relay1,HIGH); //disigage relay: Turn off printer
    digitalWrite(relay2,HIGH); // must reset safety host to turn on printer
    alarm(); //sound the alarm
  }
  delay(1000);
}

float voltage(){
  //Adapted from a sketch by Cyrille MÃ©dard de Chardon (serialC), Christophe Trefois (Trefex)
  //http://arduinodev.woofex.net/2012/12/01/standalone-sharp-dust-sensor/ 
  float voltage;
 ///////////////////////////////////////////////////////////// 
  digitalWrite(ledSensePin, LOW); //turn on sensor
  delayMicroseconds(280);
  voltage = analogRead(sensorPin);
  delayMicroseconds(40);
  digitalWrite(ledSensePin, HIGH); //turn off sensor
  delayMicroseconds(9680);
  Serial.println(voltage);
 ///////////////////////////////////////////////////////////// 
 return voltage;
}

void alarm(){
  tone(alarmPin, 100);//alarm sequence
  digitalWrite(ledPin,HIGH);
  delay(1000);
  noTone(alarmPin);
  digitalWrite(ledPin,LOW);
  delay(1000);
  tone(alarmPin, 100);
  digitalWrite(ledPin,HIGH);
  delay(1000);
  noTone(alarmPin);
  digitalWrite(ledPin,LOW);
  delay(1000);
  tone(alarmPin, 100);
  digitalWrite(ledPin,HIGH);
  delay(1000);
  noTone(alarmPin);
  digitalWrite(ledPin,LOW);
  delay(1000*2);
}
